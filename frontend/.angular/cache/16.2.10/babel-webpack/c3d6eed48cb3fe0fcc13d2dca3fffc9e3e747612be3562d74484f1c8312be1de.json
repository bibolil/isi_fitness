{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FormComponent = class FormComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.name = \"\";\n    this.iteration = 0;\n    this.progressValue = 0;\n    this.isAllergiesChecked = false;\n    this.isIntolerancesChecked = false;\n    this.isChronicConditionsChecked = false;\n    this.isMedicationsChecked = false;\n    this.isSurgeriesChecked = false;\n    this.smoking_state = \"\";\n    this.allergies_string = \"\";\n    this.intolerances_string = \"\";\n    this.checked = \"\";\n    //variables for request\n    this.weight_management = \"\";\n    this.strength_goal = false;\n    this.flexibility_goal = false;\n    this.endurance_goal = false;\n    this.height = 0;\n    this.weight = 0;\n    this.age = 0;\n    this.gender = \"\";\n    this.occupation = \"\";\n    this.sleep_hours = 0;\n    this.stress_level = \"\";\n    this.smoking = false;\n    this.diet_type = \"\";\n    this.activity_level = \"\";\n    this.allergies = [];\n    this.intolerances = [];\n  }\n  setname(name) {\n    this.name = name;\n  }\n  stringToList(input) {\n    return input.split(',');\n  }\n  continue() {\n    switch (this.iteration) {\n      case 0:\n        break;\n      case 1:\n        this.setname(document.getElementById(\"FullName\").value);\n        break;\n      case 2:\n        switch (this.checked) {\n          case \"1\":\n            this.weight_management = \"gain weight\";\n            break;\n          case \"2\":\n            this.weight_management = \"lose weight\";\n            break;\n          case \"3\":\n            this.weight_management = \"maintain weight\";\n            break;\n        }\n        break;\n      case 3:\n        if (this.smoking_state === \"smoker\") {\n          this.smoking = true;\n        }\n        break;\n      case 4:\n        if (this.isAllergiesChecked) {\n          this.allergies = this.stringToList(this.allergies_string);\n        }\n        if (this.isIntolerancesChecked) {\n          this.intolerances = this.stringToList(this.intolerances_string);\n        }\n    }\n    this.iteration++;\n    this.progressValue = this.progressValue + 20;\n  }\n  return() {\n    this.iteration--;\n    this.progressValue = this.progressValue - 20;\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);","map":{"version":3,"names":["Component","FormComponent","constructor","elementRef","name","iteration","progressValue","isAllergiesChecked","isIntolerancesChecked","isChronicConditionsChecked","isMedicationsChecked","isSurgeriesChecked","smoking_state","allergies_string","intolerances_string","checked","weight_management","strength_goal","flexibility_goal","endurance_goal","height","weight","age","gender","occupation","sleep_hours","stress_level","smoking","diet_type","activity_level","allergies","intolerances","setname","stringToList","input","split","continue","document","getElementById","value","return","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\bilel\\OneDrive\\Bureau\\Expert system\\frontend\\src\\app\\form\\form.component.ts"],"sourcesContent":["import { Component,ElementRef  } from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  constructor(private elementRef: ElementRef<HTMLElement>) {}\n  \n\n  name: string = \"\";\n\n  iteration = 0;\n  progressValue: number = 0;\n\n  isAllergiesChecked: boolean = false;\n  isIntolerancesChecked: boolean = false;\n  isChronicConditionsChecked: boolean = false;\n  isMedicationsChecked: boolean = false;\n  isSurgeriesChecked: boolean = false;\n  smoking_state:string=\"\";\n  allergies_string:string=\"\";\n  intolerances_string:string=\"\";\n  checked: string=\"\";\n\n  //variables for request\n  weight_management: string=\"\";\n  strength_goal: boolean = false; \n  flexibility_goal: boolean = false;\n  endurance_goal: boolean = false;\n  height: number = 0;\n  weight: number = 0;\n  age: number = 0;\n  gender: string = \"\";\n  occupation: string = \"\";\n  sleep_hours: number = 0;\n  stress_level: string = \"\";\n  smoking: boolean = false;\n  diet_type:string=\"\";\n  activity_level:string=\"\";\n  allergies:string[]=[];\n  intolerances:string[]=[];\n\n  setname(name: string) {\n    this.name = name;\n  }\n\n  stringToList(input: string): string[] {\n    return input.split(',');\n}\n\n  continue() {\n      switch(this.iteration) {\n      case 0:\n        break;\n      case 1:\n        this.setname((<HTMLInputElement>document.getElementById(\"FullName\")).value);\n        break;\n      case 2:\n        switch(this.checked)\n        {\n          case \"1\":\n            this.weight_management=\"gain weight\"\n            break;\n          case \"2\":\n            this.weight_management=\"lose weight\"\n            break;\n          case \"3\":\n            this.weight_management=\"maintain weight\"\n            break;\n        }\n\n        break;\n      case 3:\n        if(this.smoking_state===\"smoker\")\n        {\n          this.smoking=true;\n        }\n        break;\n      case 4:\n        if(this.isAllergiesChecked)\n        {\n          this.allergies=this.stringToList(this.allergies_string);\n        }\n        if(this.isIntolerancesChecked)\n        {\n          this.intolerances=this.stringToList(this.intolerances_string);\n        }\n    }\n    this.iteration++;\n    this.progressValue = this.progressValue + 20;\n  }\n\n\n  return() {\n    this.iteration--;\n    this.progressValue = this.progressValue - 20;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
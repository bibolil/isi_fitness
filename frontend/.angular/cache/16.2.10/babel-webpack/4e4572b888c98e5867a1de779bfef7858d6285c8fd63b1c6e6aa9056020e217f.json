{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FormComponent = class FormComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.name = \"\";\n    this.iteration = 0;\n    this.progressValue = 0;\n    this.isAllergiesChecked = false;\n    this.isIntolerancesChecked = false;\n    this.isChronicConditionsChecked = false;\n    this.isMedicationsChecked = false;\n    this.isSurgeriesChecked = false;\n    this.smoking_state = \"\";\n    this.allergies_string = \"\";\n    this.intolerances_string = \"\";\n    this.chronic_conditions_string = \"\";\n    this.medications_string = \"\";\n    this.surgeries_string = \"\";\n    this.checked = \"\";\n    //variables for request\n    this.weight_management = \"\";\n    this.strength_goal = false;\n    this.flexibility_goal = false;\n    this.endurance_goal = false;\n    this.height = 0;\n    this.weight = 0;\n    this.age = 0;\n    this.gender = \"\";\n    this.occupation = \"\";\n    this.sleep_hours = 0;\n    this.stress_level = \"\";\n    this.smoking = false;\n    this.diet_type = \"\";\n    this.activity_level = \"\";\n    this.allergies = [];\n    this.intolerances = [];\n    this.current_physical_health = \"\";\n    this.chronic_conditions = [];\n    this.medications = [];\n    this.recent_surgeries_or_injuries = [];\n  }\n  setname(name) {\n    this.name = name;\n  }\n  stringToList(input) {\n    return input.split(',');\n  }\n  continue() {\n    switch (this.iteration) {\n      case 0:\n        break;\n      case 1:\n        this.setname(document.getElementById(\"FullName\").value);\n        break;\n      case 2:\n        switch (this.checked) {\n          case \"1\":\n            this.weight_management = \"gain weight\";\n            break;\n          case \"2\":\n            this.weight_management = \"lose weight\";\n            break;\n          case \"3\":\n            this.weight_management = \"maintain weight\";\n            break;\n        }\n        break;\n      case 3:\n        if (this.smoking_state === \"smoker\") {\n          this.smoking = true;\n        }\n        break;\n      case 4:\n        if (this.isAllergiesChecked) {\n          this.allergies = this.stringToList(this.allergies_string);\n        }\n        if (this.isIntolerancesChecked) {\n          this.intolerances = this.stringToList(this.intolerances_string);\n        }\n        break;\n      case 5:\n        if (this.isChronicConditionsChecked) {\n          this.chronic_conditions = this.stringToList(this.chronic_conditions_string);\n        }\n        if (this.isMedicationsChecked) {\n          this.medications = this.stringToList(this.medications_string);\n        }\n        if (this.isSurgeriesChecked) {\n          this.recent_surgeries_or_injuries = this.stringToList(this.surgeries_string);\n        }\n        break;\n    }\n    this.iteration++;\n    this.progressValue = this.progressValue + 20;\n  }\n  return() {\n    this.iteration--;\n    this.progressValue = this.progressValue - 20;\n  }\n  sendData() {\n    const fitnessData = {\n      weight_management: this.weight_management,\n      strength_goal: this.strength_goal,\n      flexibility_goal: this.flexibility_goal,\n      endurance_goal: this.endurance_goal,\n      height: this.height,\n      weight: this.weight,\n      age: this.age,\n      gender: this.gender,\n      occupation: this.occupation,\n      sleep_hours: this.sleep_hours,\n      stress_level: this.stress_level,\n      smoking: this.smoking,\n      diet_type: this.diet_type,\n      activity_level: this.activity_level,\n      allergies: this.allergies,\n      intolerances: this.intolerances,\n      current_physical_health: this.current_physical_health,\n      chronic_conditions: this.chronic_conditions,\n      medications: this.medications,\n      recent_surgeries_or_injuries: this.recent_surgeries_or_injuries\n    };\n    this.http.post(\"http://localhost:5000/api\", fitnessData).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);","map":{"version":3,"names":["Component","FormComponent","constructor","http","router","name","iteration","progressValue","isAllergiesChecked","isIntolerancesChecked","isChronicConditionsChecked","isMedicationsChecked","isSurgeriesChecked","smoking_state","allergies_string","intolerances_string","chronic_conditions_string","medications_string","surgeries_string","checked","weight_management","strength_goal","flexibility_goal","endurance_goal","height","weight","age","gender","occupation","sleep_hours","stress_level","smoking","diet_type","activity_level","allergies","intolerances","current_physical_health","chronic_conditions","medications","recent_surgeries_or_injuries","setname","stringToList","input","split","continue","document","getElementById","value","return","sendData","fitnessData","post","subscribe","next","data","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\bilel\\OneDrive\\Bureau\\Expert system\\frontend\\src\\app\\form\\form.component.ts"],"sourcesContent":["import { Component,ElementRef  } from '@angular/core';\nimport { FitnessService } from '../app-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  constructor(private http: HttpClient,private router: Router) {}\n  \n\n  name: string = \"\";\n\n  iteration = 0;\n  progressValue: number = 0;\n\n  isAllergiesChecked: boolean = false;\n  isIntolerancesChecked: boolean = false;\n  isChronicConditionsChecked: boolean = false;\n  isMedicationsChecked: boolean = false;\n  isSurgeriesChecked: boolean = false;\n  smoking_state:string=\"\";\n  allergies_string:string=\"\";\n  intolerances_string:string=\"\";\n  chronic_conditions_string:string=\"\";\n  medications_string:string=\"\";\n  surgeries_string:string=\"\";\n  checked: string=\"\";\n\n  //variables for request\n  weight_management: string=\"\";\n  strength_goal: boolean = false; \n  flexibility_goal: boolean = false;\n  endurance_goal: boolean = false;\n  height: number = 0;\n  weight: number = 0;\n  age: number = 0;\n  gender: string = \"\";\n  occupation: string = \"\";\n  sleep_hours: number = 0;\n  stress_level: string = \"\";\n  smoking: boolean = false;\n  diet_type:string=\"\";\n  activity_level:string=\"\";\n  allergies:string[]=[];\n  intolerances:string[]=[];\n  current_physical_health:string=\"\";\n  chronic_conditions:string[]=[];\n  medications:string[]=[];\n  recent_surgeries_or_injuries:string[]=[];\n\n\n\n\n\n  setname(name: string) {\n    this.name = name;\n  }\n\n  stringToList(input: string): string[] {\n    return input.split(',');\n}\n\n  continue() {\n      switch(this.iteration) {\n      case 0:\n        break;\n      case 1:\n        this.setname((<HTMLInputElement>document.getElementById(\"FullName\")).value);\n        break;\n      case 2:\n        switch(this.checked)\n        {\n          case \"1\":\n            this.weight_management=\"gain weight\"\n            break;\n          case \"2\":\n            this.weight_management=\"lose weight\"\n            break;\n          case \"3\":\n            this.weight_management=\"maintain weight\"\n            break;\n        }\n\n        break;\n      case 3:\n        if(this.smoking_state===\"smoker\")\n        {\n          this.smoking=true;\n        }\n        break;\n      case 4:\n        if(this.isAllergiesChecked)\n        {\n          this.allergies=this.stringToList(this.allergies_string);\n        }\n        if(this.isIntolerancesChecked)\n        {\n          this.intolerances=this.stringToList(this.intolerances_string);\n        }\n        break;\n      case 5:\n        if(this.isChronicConditionsChecked)\n        {\n          this.chronic_conditions=this.stringToList(this.chronic_conditions_string);\n        }\n        if(this.isMedicationsChecked)\n        {\n          this.medications=this.stringToList(this.medications_string);\n        }\n        if(this.isSurgeriesChecked)\n        {\n          this.recent_surgeries_or_injuries=this.stringToList(this.surgeries_string);\n        }\n        break;\n    }\n    this.iteration++;\n    this.progressValue = this.progressValue + 20;\n  }\n\n\n  return() {\n    this.iteration--;\n    this.progressValue = this.progressValue - 20;\n  }\n\n  sendData() {\n    const fitnessData = {\n      weight_management: this.weight_management,\n      strength_goal: this.strength_goal,\n      flexibility_goal: this.flexibility_goal,\n      endurance_goal: this.endurance_goal,\n      height: this.height,\n      weight: this.weight,\n      age: this.age,\n      gender: this.gender,\n      occupation: this.occupation,\n      sleep_hours: this.sleep_hours,\n      stress_level: this.stress_level,\n      smoking: this.smoking,\n      diet_type: this.diet_type,\n      activity_level: this.activity_level,\n      allergies: this.allergies,\n      intolerances: this.intolerances,\n      current_physical_health: this.current_physical_health,\n      chronic_conditions: this.chronic_conditions,\n      medications: this.medications,\n      recent_surgeries_or_injuries: this.recent_surgeries_or_injuries\n    };\n\n    this.http.post(\"http://localhost:5000/api\",fitnessData).subscribe(\n      {\n      next: data => {\n        console.log(data);\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}